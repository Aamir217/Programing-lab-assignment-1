// Program to find the millionth lexicographic permutation of digits 0-9

CODE ->
#include <stdio.h>
#include <string.h>

#define N 10

void swap(char *a, char *b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}

void reverse(char *start, char *end) {
    while (start < end) {
        swap(start, end);
        start++;
        end--;
    }
}

int next_permutation(char *str, int n) {
    int i = n - 2;
    while (i >= 0 && str[i] >= str[i + 1]) {
        i--;
    }
    if (i < 0) return 0;

    int j = n - 1;
    while (str[j] <= str[i]) {
        j--;
    }
    swap(&str[i], &str[j]);
    reverse(&str[i + 1], &str[n - 1]);
    return 1;
}

int main() {
    char digits[] = "0123456789";
    int count = 1;

    while (count < 1000000) {
        next_permutation(digits, N);
        count++;
    }

    printf("The millionth lexicographic permutation is: %s\n", digits);
    return 0;
}
